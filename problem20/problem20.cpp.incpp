/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};

class Solution {
public:
    int getLen(ListNode* head) {
        int len = 0;
        while (head) {
            len++;
            head = head->next;
        }
        return len;
    }
    
    ListNode* problem20Helper(ListNode* headA, ListNode* headB, int lenA, int lenB) {
        // We assume List B is the longer of both lists
        ListNode* tempA = headA;
        ListNode* tempB = headB;
        int diff = lenB - lenA;
        while(diff>0) {
            tempB = tempB->next;
            diff--;
        }
        while (tempA && tempB) {
            if (tempA == tempB) return tempA;
            tempA = tempA->next;
            tempB = tempB->next;
        }
        return nullptr;
    }
    
    ListNode *problem20(ListNode *headA, ListNode *headB) {
        // Calculate length of lists first
        int lenA = getLen(headA);
        int lenB = getLen(headB);
        return  (lenA <= lenB) ? problem20Helper(headA,headB,lenA,lenB) : problem20Helper(headB,headA,lenB,lenA);
    } 
};


int main() {

    return 0;
}
